name: Deploy to VPS

on:
  push:
    branches: [ main ]

concurrency:
  group: deploy-archetypy
  cancel-in-progress: true

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Prepare SSH key from secret (base64)
        env:
          KEY_B64: ${{ secrets.SERVER_SSH_KEY_B64 }}
        run: |
          set -euo pipefail
          test -n "$KEY_B64"
          umask 077
          mkdir -p /home/runner/.ssh
          # dekodujemy prywatny do ~/.ssh/id_ed25519
          echo "$KEY_B64" | base64 -d > /home/runner/.ssh/id_ed25519
          chmod 600 /home/runner/.ssh/id_ed25519
          # dla porÃ³wnania wypisujemy PUBLICZNY i fingerprint z klucza z biegacza
          ssh-keygen -y -f /home/runner/.ssh/id_ed25519 > /home/runner/.ssh/id_ed25519.pub
          echo "RUNNER PUB:"
          cat /home/runner/.ssh/id_ed25519.pub
          echo "RUNNER FPR:"
          ssh-keygen -lf /home/runner/.ssh/id_ed25519.pub

      - name: Make remote deploy script
        run: |
          cat > deploy.sh <<'EOF'
          set -euxo pipefail
          cd /srv/archetypy-admin
          git config --global --add safe.directory /srv/archetypy-admin
          git fetch --all
          git reset --hard origin/main
          # w razie czego tworzymy venv
          if [ ! -d .venv ]; then python3 -m venv .venv; fi
          . .venv/bin/activate
          pip install --no-cache-dir -r requirements.txt
          sudo systemctl restart archetypy-admin
          systemctl --no-pager -l status archetypy-admin | sed -n '1,120p'
          EOF
          chmod +x deploy.sh

      - name: Copy & run remote script over SSH
        env:
          HOST: ${{ secrets.SERVER_HOST }}
          PORT: ${{ secrets.SERVER_PORT }}
          USER: ${{ secrets.SERVER_USER }}
        run: |
          set -euxo pipefail
          scp -P "$PORT" -o IdentitiesOnly=yes -o StrictHostKeyChecking=no \
              -i /home/runner/.ssh/id_ed25519 deploy.sh "$USER@$HOST:/tmp/deploy.sh"
          ssh -p "$PORT" -o IdentitiesOnly=yes -o StrictHostKeyChecking=no \
              -i /home/runner/.ssh/id_ed25519 "$USER@$HOST" 'bash /tmp/deploy.sh'

      - name: Healthcheck
        shell: bash
        run: |
          set -e
          for i in {1..30}; do
            code=$(curl -fsSLk -o /dev/null -w "%{http_code}" https://panel.archetypy.badania.pro/)
            echo "Probe $i -> HTTP $code"
            if [ "$code" = "200" ]; then
              echo "OK"
              exit 0
            fi
            sleep 3
          done
          echo "Healthcheck failed."
          exit 1
